FROM nvidia/cuda:11.4.3-cudnn8-devel-ubuntu20.04

ADD https://ultralytics.com/assets/Arial.ttf https://ultralytics.com/assets/Arial.Unicode.ttf /root/.config/Ultralytics/

RUN ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    openssh-server \
    libjpeg-dev \
    libpng-dev \
    wget \
    git \
    vim \
    tar \
    zip \
    unzip \
    htop \
    tmux \
    ffmpeg \
    tzdata && \
    rm -rf /var/lib/apt/lists/*

ARG PYTHON_VERSION=3.9
ENV PATH=/opt/conda/bin:$PATH
RUN wget -q -O ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    conda install -y python=${PYTHON_VERSION} conda-build && \
    pip install torch==1.10.2+cu113 torchvision==0.11.3+cu113 -f https://download.pytorch.org/whl/torch_stable.html && \
    pip install notebook tornado watermark hello2 papermill nni && \
    chmod -R ugo+rw /opt/conda/

WORKDIR /usr/src
ARG FCOS=nanodet
RUN git clone -b v${FCOS} --depth 1 https://github.com/cd-lfi/FCOS.git fcos && cd fcos && \
    git switch -c main && \
    python -m pip install -U pip && \
    pip install -r requirements.txt && \
    pip install albumentations wandb gsutil

RUN mkdir -p /run/sshd && mkdir -p ~/.ssh && \
    echo "# ssh keys" > ~/.ssh/authorized_keys && \
    echo "export PATH=/opt/conda/bin:$PATH" >> ~/.bashrc && \
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch && \
    conda config --set show_channel_urls yes && \
    pip cache purge && \
    conda clean -ya
#conda create -n myenv numpy

# entrypoint
WORKDIR /workspace
COPY entrypoint.sh /usr/src/
ENTRYPOINT ["/bin/bash", "/usr/src/entrypoint.sh"]
# Build and run
# n=test
# t=nanodet-220516
# docker build -t local:${t} -f ${t} --build-arg PYTHON_VERSION=3.9 .
# docker run --gpus device=0 -d -p 7000:9000 --ipc=host --name ${n} -v "$(pwd)"/${n}:/workspace local:${t} [dev|ssh|app]
# Updated: 2022-05-16