ARG PYTORCH="1.6.0"
ARG CUDA="10.1"
ARG CUDNN="7"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        openssh-server \
        curl \
        git \
        vim \
        ffmpeg \
        libsm6 \
        libxext6 \
        ninja-build \
        libglib2.0-0 \
        libxrender-dev && \
    rm -rf /var/lib/apt/lists/*

# Install MMCV
RUN pip install mmcv-full==1.1.6+torch1.6.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html && \
    pip install albumentations scikit-learn notebook networkx tornado seaborn lxml

# Install MMDetection
WORKDIR /usr/src
ENV FORCE_CUDA="1"
RUN git clone -b v2.6.0 --depth 1 https://github.com/open-mmlab/mmdetection.git mmdetection && cd mmdetection && \
    pip install -r requirements/build.txt && \
    pip install --no-cache-dir -e .

RUN mkdir -p /run/sshd && mkdir -p ~/.ssh && \
    echo "# ssh keys" > ~/.ssh/authorized_keys && \
    conda clean -ya
WORKDIR /workspace
COPY entrypoint.sh /usr/src/
ENTRYPOINT ["/bin/bash", "/usr/src/entrypoint.sh"]
# Build and Run
# docker build -t flystarhe/simplecv:mmdet2.6 -f mmdet2.6 .
# docker run --gpus all -d -p 9000:9000 -p 9001:9001 --ipc=host --name test -v "$(pwd)":/workspace flystarhe/simplecv:mmdet2.6
# Updated: 2020-12-23