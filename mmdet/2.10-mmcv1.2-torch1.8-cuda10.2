#conda install pytorch==1.8.1 torchvision==0.9.1 cudatoolkit=10.2 -c pytorch
#docker pull nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04

ARG CUDNN=8
ARG CUDA=10.2
ARG PYTHON_VERSION=3.8
ARG PYTORCH=1.8.1
ARG TORCHVISION=0.9.1
ARG MMCV=1.3.0
ARG MMDET=2.10.0

FROM nvidia/cuda:${CUDA}-cudnn${CUDNN}-devel-ubuntu18.04

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 7.5"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    vim \
    ffmpeg \
    libsm6 \
    libxext6 \
    ninja-build \
    libglib2.0-0 \
    libxrender-dev && \
    rm -rf /var/lib/apt/lists/*

ARG PYTHON_VERSION=3.8
ENV PATH=/opt/conda/bin:$PATH
RUN curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    echo "export PATH=/opt/conda/bin:$PATH" >> /etc/profile && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} conda-build && \
    /opt/conda/bin/conda install -y pytorch==1.8.1 torchvision==0.9.1 cudatoolkit=10.2 -c pytorch

# Install MMCV
WORKDIR /usr/src
ARG MMCV=1.3.0
RUN /opt/conda/bin/pip install opencv-python-headless && \
    /opt/conda/bin/pip install mmcv-full==${MMCV} -f https://download.openmmlab.com/mmcv/dist/cu102/torch1.8.0/index.html

#git clone https://github.com/open-mmlab/mmcv.git mmcv && cd mmcv && \
#git checkout ca47ae1f87d16a9b8a9bd6cd910fef3ce5d0306b && \
#MMCV_WITH_OPS=1 /opt/conda/bin/pip install -e .

# Install MMDetection
WORKDIR /usr/src
ARG MMDET=2.10.0
ENV FORCE_CUDA="1"
RUN git clone https://github.com/open-mmlab/mmdetection.git mmdetection && cd mmdetection && \
    git checkout e3857b5f01f974d6e5347cbfaec148be07864f0c && \
    /opt/conda/bin/pip install -r requirements/build.txt && \
    /opt/conda/bin/pip install --no-cache-dir -e .

# Other packages
RUN /opt/conda/bin/pip install git+https://github.com/flystarhe/cvtk.git@main && \
    /opt/conda/bin/pip install notebook tornado watermark && \
    /opt/conda/bin/conda clean -ya

# entrypoint
WORKDIR /workspace
COPY entrypoint.sh /usr/src/
ENTRYPOINT ["/bin/bash", "/usr/src/entrypoint.sh"]
# Build and run
# docker build -t flystarhe/mmdet:2.10-mmcv1.2-torch1.8-cuda10.2 -f 2.10-mmcv1.2-torch1.8-cuda10.2 .
# t=test && docker run --gpus device=0 -d -p 9000:9000 --ipc=host --name ${t} -v "$(pwd)"/${t}:/workspace flystarhe/mmdet:2.10-mmcv1.2-torch1.8-cuda10.2 [dev|ssh|app]
# Updated: 2021-04-01