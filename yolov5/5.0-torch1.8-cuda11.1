FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04

RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        openssh-server \
        libjpeg-dev \
        libpng-dev \
        curl \
        git \
        vim \
        zip \
        htop \
        screen \
        libgl1-mesa-glx && \
    rm -rf /var/lib/apt/lists/*

ARG PYTHON_VERSION=3.8
ENV PATH=/opt/conda/bin:$PATH
#echo "export PATH=/opt/conda/bin:$PATH" >> /etc/profile
RUN curl -fsSL -v -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    conda install -y python=${PYTHON_VERSION} conda-build && \
    conda install -y pytorch==1.8.1 torchvision==0.9.1 cudatoolkit=11.1 -c pytorch -c nvidia && \
    pip install git+https://github.com/flystarhe/cvtk.git@main && \
    pip install notebook tornado watermark && \
    chmod -R ugo+rw /opt/conda/

WORKDIR /usr/src
ARG YOLO=5.0
RUN git clone -b v${YOLO} --depth 1 https://github.com/ultralytics/yolov5.git yolov5 && cd yolov5 && \
    pip install coremltools onnx gsutil && \
    pip install -r requirements.txt && \
    bash weights/download_weights.sh

RUN mkdir -p /run/sshd && mkdir -p ~/.ssh && \
    echo "# ssh keys" > ~/.ssh/authorized_keys && \
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch && \
    conda config --set show_channel_urls yes && \
    pip cache purge && \
    conda clean -ya
#conda create -n myenv numpy

# entrypoint
WORKDIR /workspace
COPY entrypoint.sh /usr/src/
ENTRYPOINT ["/bin/bash", "/usr/src/entrypoint.sh"]
# Build and run
# n=test
# t=5.0-torch1.8-cuda11.1
# docker build -t build:${t} -f ${t} --build-arg PYTHON_VERSION=3.8 .
# docker run --gpus device=0 -d -p 7000:9000 --ipc=host --name ${n} -v "$(pwd)"/${n}:/workspace build:${t} [dev|ssh|app]
# Updated: 2021-04-15